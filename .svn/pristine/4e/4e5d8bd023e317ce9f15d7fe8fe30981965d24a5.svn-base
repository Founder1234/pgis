<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>{% block title %}{% endblock %}</title>
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/newdoc.css">
    <link rel="stylesheet" type="text/css" href="css/codemirror.css">
    <link rel="stylesheet" type="text/css" href="js/simplescrollbars.css">
    <script src="js/codemirror.js"></script>
    <script src="js/jquery.min.js"></script>
    <script src="mode/xml/xml.js"></script>
    <script src="mode/javascript/javascript.js"></script>
    <script src="mode/css/css.js"></script>
    <script src="mode/vbscript/vbscript.js"></script>
    <script src="mode/htmlmixed/htmlmixed.js"></script>
    <script src="js/simplescrollbars.js"></script>
    <script src="js/data/data.js"></script>
</head>

<body>
    <div class="newdoc-header" id="header">
        <div class="logo">
            <img src="./image/logo.png" alt="logo" />
        </div>
    </div>
    <div class="container-fluid newdoc-container">
        <div class="row newdoc-row">
            <div class="col-md-2 newdoc-tree">
                <div class="newdoc-tree-header">
                    <label>EzServerClient功能实例</label>
                </div>
                <div class="newdoc-tree-body">
                    <ul id="tree" class="newdoc-aci-tree">
                    </ul>
                </div>
            </div>
            <div class="col-md-4 newdoc-codes">
                <div class="newdoc-codes-header">
                    <label>源代码</label>
                    <div class="btn-group newdoc-codes-header-btngroup" role="group">
                        <a type="button" class="btn btn-small" onclick="restore()"><i class="glyphicon glyphicon-refresh"></i>刷新</a>
                        <a type="button" class="btn btn-small" onclick="run()"><i class="glyphicon glyphicon-play-circle"></i>运行</a>
                    </div>
                </div>
                <div class="newdoc-codes-wrap">
                    <textarea name="" id="CodeMirror" class="CodeMirror">
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="../lib/EzServerClient.min.css">
    <script type="text/javascript" src="../lib/EzMapAPI.js"></script>
    <script type="text/javascript" src="../lib/EzServerClient.min.js"></script>
    {% block head %}{% endblock %}
    <style type="text/css">
    body,
    html,
    #allmap {
        width: 100%;
        height: 100%;
        overflow: hidden;
        margin: 0;
        font-family: "微软雅黑";
    }
    </style>
</head>
{% block code %} {% endblock %}
</html>
                    </textarea>
                </div>
            </div>
            <div class="col-md-6 newdoc-map">
                <iframe id="preview" width="100%" height="98%" scrolling="no" frameborder="0"></iframe>
            </div>
        </div>
    </div>
    <script>
    var element = document.getElementById('CodeMirror');
    var mixedMode = {
        name: "htmlmixed",
        scriptTypes: [{
            matches: /\/x-handlebars-template|\/x-mustache/i,
            mode: null
        }, {
            matches: /(text|application)\/(x-)?vb(a|script)/i,
            mode: "vbscript"
        }]
    };
    var editor = CodeMirror.fromTextArea(element, {
        mode: mixedMode,
        lineWrapping: true,
        scrollbarStyle: "simple",
        styleActiveLine: true,
        tabMode: 'indent',
        autoCloseTags: true
    });

    //js tree
    var ulele = document.getElementById('tree');
    for (var i = 0; i < data.length; i++) {
        var liindex = generateli(data[i]);
        ulele.appendChild(liindex);
    }

    // $.get('js/data/data.json',function(data){
    //     var ul_element = document.getElementById('ul-tree');
    //     for (var i = 0; i < data.length; i++) {
    //         var lielement = generateli(data[i]);
    //         ul_element.appendChild(lielement);
    //     }
    // });


    function generateli(obj) {
        var li = document.createElement('li');
        li.className = 'list_item';
        var a = document.createElement('a');
        a.className = 'one_head';
        a.innerText = obj.text;
        var i = document.createElement('i');
        i.className = 't_t';
        i.id = 't_t';
        a.appendChild(i);
        li.appendChild(a);
        var div = document.createElement('div');
        div.className = 'submenu';
        var dl = document.createElement('dl');
        div.appendChild(dl);
        li.appendChild(div);

        var state = obj.state ? obj.state : {};
        if (state.opened) {
            div.style.display = 'block';
            i.className = 't_t t_open';
        } else {
            div.style.display = 'none';
            i.className = 't_t t_close';
        }

        for (var j = 0; j < obj.children.length; j++) {
            var dd = document.createElement('dd');
            var at = document.createElement('a');
            at.innerText = obj.children[j].text;
            at.href = obj.children[j].li_attr.name;
            dd.appendChild(at);
            dl.appendChild(dd);
        }
        return li;
    }

    $('#tree').on('click', 'li a', function(event) {
        var target = $(this).parent().children('div');
        var targeti = $(this).parent().children("a").children("i");
        var state = target.css('display');
        if (state === 'block') {
            target.css('display', 'none');
            targeti.removeClass('t_open');
            targeti.addClass('t_close');
        } else {
            target.css('display', 'block');
            targeti.removeClass('t_close');
            targeti.addClass('t_open');
        }
    });

    var preview = document.getElementById('preview');
    var initValue = editor.getValue();


    function restore() {
        editor.setValue(initValue);
        updatePreview();
    }

    function run() {
        updatePreview();
    }

    function updatePreview() {
        previewContent = preview.contentDocument || preview.contentWindow.document;
        previewContent.open();
        previewContent.write(editor.getValue());
        previewContent.close();
    }

    updatePreview();
    </script>
</body>

</html>
